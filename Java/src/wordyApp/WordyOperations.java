package wordyApp;


/**
* wordyApp/WordyOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Wordy.idl
* Friday, July 7, 2023 7:38:10 PM SGT
*/


// SERVER TO CLIENT METHODS
public interface WordyOperations 
{

  /* Client login */
  wordyApp.Player login (String username, String password) throws wordyApp.IncorrectCredentials, wordyApp.AlreadyLoggedIn;
  wordyApp.LeaderBoard[] showLeaderBoard ();
  wordyApp.LongestWordWinner[] top5longestWords ();

  /* Creates room/s for players */
  wordyApp.RoomGame play (wordyApp.Player playerInstance) throws wordyApp.NoPlayerJoined;

  /* Handles next round*/
  wordyApp.RoomGame nextRoundHandler (wordyApp.RoomGame roomToPrepare);

  /* Waits for players in the room */
  void startTenSecondTimer (int milliseconds);

  /* Create timer for the round/s */
  void startRoundTimer (wordyApp.RoomGame game, int seconds);

  /* Create timer for in between break of rounds */
  void startBreakTimer (wordyApp.RoomGame game);

  /* Retrieves timer for the round */
  long getRoundTimer (String roomRoundID);

  /* Retrieves timer for the in between break */
  long getBreakTimer (String roomBreakID);
  void addRoom (String roomIDForRoomAdd, wordyApp.RoomGame roomForAddRoom);
  void decreasePlayerCount (String roomNumberToDecreasePlayer);
  void deleteRoom (String roomNumberToDelete);
  void updatePlayerIsInGame (String usernamePlayer, boolean isPlayerInGame);
  void updateResult (String roomgameID, String winner, int roundnumber);
  String getWinner (String roomgameID, int roundnumber);
  int getPlayerCount (String roomIDForPlayerCount);

  /* Calculates the remaining time left */
  long calculateTimeLeft (long startTime, long endTime);

  /* Retrieves time left of the timer */
  long getTimeLeft ();

  /* Generates the 17 random letters */
  void setRandomLetters (wordyApp.RoomGame roomToSetRLetters);

  /* Retrieves 17 random letters to client */
  String getRoomRandomLetters (String roomIDToGetRLetters);

  /* Validates user's entered word */
  boolean userEnteredWord (String userWord, wordyApp.Player playerInstance, wordyApp.RoomGame playerCurrentRoom);

  /* Checks for the specific round winner */
  wordyApp.Player roundWinnerChecker (wordyApp.RoomGame room) throws wordyApp.NoWinner, wordyApp.TieResult;

  /* Checks for the game win state */
  boolean gameWinStateChecker (wordyApp.RoomGame room);

  /* Retrieves game winner */
  wordyApp.Player getGameWinner (wordyApp.RoomGame room);

  /* Handles game completion */
  void finishGame (wordyApp.Player playerID, wordyApp.RoomGame room);

  /* Client logout */
  void logOffUser (String username) throws wordyApp.UserNotFound;
} // interface WordyOperations
