package wordyApp;


/**
* wordyApp/WordyPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Wordy.idl
* Friday, July 7, 2023 7:38:10 PM SGT
*/


// SERVER TO CLIENT METHODS
public abstract class WordyPOA extends org.omg.PortableServer.Servant
 implements wordyApp.WordyOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("login", new java.lang.Integer (0));
    _methods.put ("showLeaderBoard", new java.lang.Integer (1));
    _methods.put ("top5longestWords", new java.lang.Integer (2));
    _methods.put ("play", new java.lang.Integer (3));
    _methods.put ("nextRoundHandler", new java.lang.Integer (4));
    _methods.put ("startTenSecondTimer", new java.lang.Integer (5));
    _methods.put ("startRoundTimer", new java.lang.Integer (6));
    _methods.put ("startBreakTimer", new java.lang.Integer (7));
    _methods.put ("getRoundTimer", new java.lang.Integer (8));
    _methods.put ("getBreakTimer", new java.lang.Integer (9));
    _methods.put ("addRoom", new java.lang.Integer (10));
    _methods.put ("decreasePlayerCount", new java.lang.Integer (11));
    _methods.put ("deleteRoom", new java.lang.Integer (12));
    _methods.put ("updatePlayerIsInGame", new java.lang.Integer (13));
    _methods.put ("updateResult", new java.lang.Integer (14));
    _methods.put ("getWinner", new java.lang.Integer (15));
    _methods.put ("getPlayerCount", new java.lang.Integer (16));
    _methods.put ("calculateTimeLeft", new java.lang.Integer (17));
    _methods.put ("getTimeLeft", new java.lang.Integer (18));
    _methods.put ("setRandomLetters", new java.lang.Integer (19));
    _methods.put ("getRoomRandomLetters", new java.lang.Integer (20));
    _methods.put ("userEnteredWord", new java.lang.Integer (21));
    _methods.put ("roundWinnerChecker", new java.lang.Integer (22));
    _methods.put ("gameWinStateChecker", new java.lang.Integer (23));
    _methods.put ("getGameWinner", new java.lang.Integer (24));
    _methods.put ("finishGame", new java.lang.Integer (25));
    _methods.put ("logOffUser", new java.lang.Integer (26));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* Client login */
       case 0:  // wordyApp/Wordy/login
       {
         try {
           String username = in.read_string ();
           String password = in.read_string ();
           wordyApp.Player $result = null;
           $result = this.login (username, password);
           out = $rh.createReply();
           wordyApp.PlayerHelper.write (out, $result);
         } catch (wordyApp.IncorrectCredentials $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.IncorrectCredentialsHelper.write (out, $ex);
         } catch (wordyApp.AlreadyLoggedIn $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.AlreadyLoggedInHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // wordyApp/Wordy/showLeaderBoard
       {
         wordyApp.LeaderBoard $result[] = null;
         $result = this.showLeaderBoard ();
         out = $rh.createReply();
         wordyApp.WordyPackage.hallOfFameHelper.write (out, $result);
         break;
       }

       case 2:  // wordyApp/Wordy/top5longestWords
       {
         wordyApp.LongestWordWinner $result[] = null;
         $result = this.top5longestWords ();
         out = $rh.createReply();
         wordyApp.WordyPackage.longestWinnerHelper.write (out, $result);
         break;
       }


  /* Creates room/s for players */
       case 3:  // wordyApp/Wordy/play
       {
         try {
           wordyApp.Player playerInstance = wordyApp.PlayerHelper.read (in);
           wordyApp.RoomGame $result = null;
           $result = this.play (playerInstance);
           out = $rh.createReply();
           wordyApp.RoomGameHelper.write (out, $result);
         } catch (wordyApp.NoPlayerJoined $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.NoPlayerJoinedHelper.write (out, $ex);
         }
         break;
       }


  /* Handles next round*/
       case 4:  // wordyApp/Wordy/nextRoundHandler
       {
         wordyApp.RoomGame roomToPrepare = wordyApp.RoomGameHelper.read (in);
         wordyApp.RoomGame $result = null;
         $result = this.nextRoundHandler (roomToPrepare);
         out = $rh.createReply();
         wordyApp.RoomGameHelper.write (out, $result);
         break;
       }


  /* Waits for players in the room */
       case 5:  // wordyApp/Wordy/startTenSecondTimer
       {
         int milliseconds = in.read_long ();
         this.startTenSecondTimer (milliseconds);
         out = $rh.createReply();
         break;
       }


  /* Create timer for the round/s */
       case 6:  // wordyApp/Wordy/startRoundTimer
       {
         wordyApp.RoomGame game = wordyApp.RoomGameHelper.read (in);
         int seconds = in.read_long ();
         this.startRoundTimer (game, seconds);
         out = $rh.createReply();
         break;
       }


  /* Create timer for in between break of rounds */
       case 7:  // wordyApp/Wordy/startBreakTimer
       {
         wordyApp.RoomGame game = wordyApp.RoomGameHelper.read (in);
         this.startBreakTimer (game);
         out = $rh.createReply();
         break;
       }


  /* Retrieves timer for the round */
       case 8:  // wordyApp/Wordy/getRoundTimer
       {
         String roomRoundID = in.read_string ();
         long $result = (long)0;
         $result = this.getRoundTimer (roomRoundID);
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }


  /* Retrieves timer for the in between break */
       case 9:  // wordyApp/Wordy/getBreakTimer
       {
         String roomBreakID = in.read_string ();
         long $result = (long)0;
         $result = this.getBreakTimer (roomBreakID);
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 10:  // wordyApp/Wordy/addRoom
       {
         String roomIDForRoomAdd = in.read_string ();
         wordyApp.RoomGame roomForAddRoom = wordyApp.RoomGameHelper.read (in);
         this.addRoom (roomIDForRoomAdd, roomForAddRoom);
         out = $rh.createReply();
         break;
       }

       case 11:  // wordyApp/Wordy/decreasePlayerCount
       {
         String roomNumberToDecreasePlayer = in.read_string ();
         this.decreasePlayerCount (roomNumberToDecreasePlayer);
         out = $rh.createReply();
         break;
       }

       case 12:  // wordyApp/Wordy/deleteRoom
       {
         String roomNumberToDelete = in.read_string ();
         this.deleteRoom (roomNumberToDelete);
         out = $rh.createReply();
         break;
       }

       case 13:  // wordyApp/Wordy/updatePlayerIsInGame
       {
         String usernamePlayer = in.read_string ();
         boolean isPlayerInGame = in.read_boolean ();
         this.updatePlayerIsInGame (usernamePlayer, isPlayerInGame);
         out = $rh.createReply();
         break;
       }

       case 14:  // wordyApp/Wordy/updateResult
       {
         String roomgameID = in.read_string ();
         String winner = in.read_string ();
         int roundnumber = in.read_long ();
         this.updateResult (roomgameID, winner, roundnumber);
         out = $rh.createReply();
         break;
       }

       case 15:  // wordyApp/Wordy/getWinner
       {
         String roomgameID = in.read_string ();
         int roundnumber = in.read_long ();
         String $result = null;
         $result = this.getWinner (roomgameID, roundnumber);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 16:  // wordyApp/Wordy/getPlayerCount
       {
         String roomIDForPlayerCount = in.read_string ();
         int $result = (int)0;
         $result = this.getPlayerCount (roomIDForPlayerCount);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }


  /* Calculates the remaining time left */
       case 17:  // wordyApp/Wordy/calculateTimeLeft
       {
         long startTime = in.read_longlong ();
         long endTime = in.read_longlong ();
         long $result = (long)0;
         $result = this.calculateTimeLeft (startTime, endTime);
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }


  /* Retrieves time left of the timer */
       case 18:  // wordyApp/Wordy/getTimeLeft
       {
         long $result = (long)0;
         $result = this.getTimeLeft ();
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }


  /* Generates the 17 random letters */
       case 19:  // wordyApp/Wordy/setRandomLetters
       {
         wordyApp.RoomGame roomToSetRLetters = wordyApp.RoomGameHelper.read (in);
         this.setRandomLetters (roomToSetRLetters);
         out = $rh.createReply();
         break;
       }


  /* Retrieves 17 random letters to client */
       case 20:  // wordyApp/Wordy/getRoomRandomLetters
       {
         String roomIDToGetRLetters = in.read_string ();
         String $result = null;
         $result = this.getRoomRandomLetters (roomIDToGetRLetters);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  /* Validates user's entered word */
       case 21:  // wordyApp/Wordy/userEnteredWord
       {
         String userWord = in.read_string ();
         wordyApp.Player playerInstance = wordyApp.PlayerHelper.read (in);
         wordyApp.RoomGame playerCurrentRoom = wordyApp.RoomGameHelper.read (in);
         boolean $result = false;
         $result = this.userEnteredWord (userWord, playerInstance, playerCurrentRoom);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  /* Checks for the specific round winner */
       case 22:  // wordyApp/Wordy/roundWinnerChecker
       {
         try {
           wordyApp.RoomGame room = wordyApp.RoomGameHelper.read (in);
           wordyApp.Player $result = null;
           $result = this.roundWinnerChecker (room);
           out = $rh.createReply();
           wordyApp.PlayerHelper.write (out, $result);
         } catch (wordyApp.NoWinner $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.NoWinnerHelper.write (out, $ex);
         } catch (wordyApp.TieResult $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.TieResultHelper.write (out, $ex);
         }
         break;
       }


  /* Checks for the game win state */
       case 23:  // wordyApp/Wordy/gameWinStateChecker
       {
         wordyApp.RoomGame room = wordyApp.RoomGameHelper.read (in);
         boolean $result = false;
         $result = this.gameWinStateChecker (room);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  /* Retrieves game winner */
       case 24:  // wordyApp/Wordy/getGameWinner
       {
         wordyApp.RoomGame room = wordyApp.RoomGameHelper.read (in);
         wordyApp.Player $result = null;
         $result = this.getGameWinner (room);
         out = $rh.createReply();
         wordyApp.PlayerHelper.write (out, $result);
         break;
       }


  /* Handles game completion */
       case 25:  // wordyApp/Wordy/finishGame
       {
         wordyApp.Player playerID = wordyApp.PlayerHelper.read (in);
         wordyApp.RoomGame room = wordyApp.RoomGameHelper.read (in);
         this.finishGame (playerID, room);
         out = $rh.createReply();
         break;
       }


  /* Client logout */
       case 26:  // wordyApp/Wordy/logOffUser
       {
         try {
           String username = in.read_string ();
           this.logOffUser (username);
           out = $rh.createReply();
         } catch (wordyApp.UserNotFound $ex) {
           out = $rh.createExceptionReply ();
           wordyApp.UserNotFoundHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:wordyApp/Wordy:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Wordy _this() 
  {
    return WordyHelper.narrow(
    super._this_object());
  }

  public Wordy _this(org.omg.CORBA.ORB orb) 
  {
    return WordyHelper.narrow(
    super._this_object(orb));
  }


} // class WordyPOA
